<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:fa="http://schemas.fontawesome.io/icons/">
    <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="#78002E" Offset="0.1"/>
        <GradientStop Color="#26008F" Offset="1.3"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="mainContentBackgroundColor" Color="black" Opacity="0.3"/>

    <!--Background Colors-->
    <Color x:Key="primaryBackColor1">#78002E</Color>
    <Color x:Key="primaryBackColor2">#26008F</Color>
    <Color x:Key="secondaryBackColor1">#24105F</Color>
    <Color x:Key="secondaryBackColor2">#210F55</Color>
    <!--Window Border Colors-->
    <Color x:Key="winBorderColor1">#F8D605</Color>
    <Color x:Key="winBorderColor2">#F36B1C</Color>
    <Color x:Key="winBorderColor3">#CE4912</Color>
    <!--Color Palette-->
    <SolidColorBrush x:Key="color1" Color="#E285DE"/>
    <SolidColorBrush x:Key="color2" Color="#784DFD"/>
    <SolidColorBrush x:Key="color3" Color="#4ADAEC"/>
    <SolidColorBrush x:Key="color4" Color="#FB539B"/>
    <SolidColorBrush x:Key="color5" Color="#7E82FC"/>
    <SolidColorBrush x:Key="color6" Color="#FFC047"/>
    <SolidColorBrush x:Key="color7" Color="#EF6C96"/>
    <SolidColorBrush x:Key="color8" Color="#78A3FC"/>
    <SolidColorBrush x:Key="color9" Color="#07F3C0"/>
    <SolidColorBrush x:Key="color10" Color="#FBA1AA"/>
    <!--Font Colors-->
    <SolidColorBrush x:Key="titleColor1" Color="#E0E1F1"/>
    <SolidColorBrush x:Key="titleColor2" Color="#D5CFF5"/>
    <SolidColorBrush x:Key="titleColor3" Color="#BCBEE0"/>
    <SolidColorBrush x:Key="plainTextColor1" Color="#9497CD"/>
    <SolidColorBrush x:Key="plainTextColor2" Color="#7C80C2"/>
    <SolidColorBrush x:Key="plainTextColor3" Color="#7376BD"/>
    <!--Panel Colors-->
    <SolidColorBrush x:Key="panelColor" Color="#200F53"/>
    <SolidColorBrush x:Key="panelOverColor" Color="#281269"/>
    <SolidColorBrush x:Key="panelActiveColor" Color="#2B1372"/>

    <!--Search Bar Color-->
    <SolidColorBrush x:Key="searchBarColor" Color="#222222"/>
    <SolidColorBrush x:Key="searchBarTextColor" Color="#E0E0E0"/>

    <!--Menu Card Text Color-->
    <SolidColorBrush x:Key="menuCardTextColor" Color="#000000"/>

    
    <Style x:Key="menuButton" TargetType="RadioButton">
        <!--Normal Button Style-->
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="-5,0,0,5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource plainTextColor3}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="4,0,0,0"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Hover Over-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{DynamicResource panelOverColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource titleColor3}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>

            <!--Active Button-->
            <Trigger Property="IsChecked"  Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{DynamicResource panelActiveColor}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--Menu Button Icon-->
    <Style x:Key="menuButtonIcon" TargetType="fa:ImageAwesome">
        <Setter  Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="35,0,20,0"/>
    </Style>

    <!--Menu Button Text-->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13.5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--Control Bar Button-->
    <Style x:Key="controlButton" TargetType="Button">
        <!--Normal Button Style-->
        <Setter Property="Width" Value="35"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource plainTextColor3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--Hover Over-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource panelActiveColor}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--Menu Button Icon-->
    <Style x:Key="controlButtonIcon" TargetType="fa:ImageAwesome">
        <Setter  Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
    </Style>


    <!--Icon Button-->
    <Style x:Key="iconButton" TargetType="Button">
        <!--Normal Button Style-->
        <Setter Property="Width" Value="25"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource plainTextColor1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--Hover Over-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--Menu Button Icon-->
    <Style x:Key="iconButtonIcon" TargetType="fa:ImageAwesome">
        <Setter  Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
    </Style>

    <Style TargetType="Label">
        <Setter Property="FontSize" Value="{Binding Value, ElementName=FontSizeSlider}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border
                        Background="{TemplateBinding Background}"
                        CornerRadius="15">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="22"/>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Background" Value="{DynamicResource color5}"/>
        <!-- Set the default background color -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder" CornerRadius="25" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Trigger for MouseOver state -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource color8}"/>
                            <!-- Set the hover background color -->
                        </Trigger>
                        <!-- Trigger for MouseOver state -->
                        <Trigger Property="IsPressed"  Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource color2}"/>
                            <!-- Set the hover background color -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="ComboBox">
        <Setter Property="FontSize" Value="22"/>
    </Style>

    <Style TargetType="DatePicker">
        <Setter Property="FontSize" Value="22"/>
    </Style>


    <!-- Toggle Button -->
    <Style TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Grid>
                            <Border Width="45" Height="20" Background="LightGray" CornerRadius="10" Margin="5,0"></Border>
                            <Border x:Name="button" Height="25" Width="25" CornerRadius="12.5" HorizontalAlignment="Left">
                                <TextBlock x:Name="icon" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <ContentPresenter x:Name="content" Margin="10,0,0,0" Content="{TemplateBinding Content}" VerticalAlignment="Center"/>
                    </StackPanel>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="right">
                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.4" From="0,0,0,0" To="28,0,0,0" >
                                <ThicknessAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                        <Storyboard x:Key="left">
                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.4" From="28,0,0,0" To="0,0,0,0" >
                                <ThicknessAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="leftt"></RemoveStoryboard>
                                <BeginStoryboard Storyboard="{StaticResource right}" x:Name="rightt" ></BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="button" Property="Background" Value="#FFFFFF"/>
                            <Setter TargetName="icon" Property="Text" Value="🌞"/>
                            <Setter TargetName="icon" Property="Foreground" Value="Orange"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="rightt"></RemoveStoryboard>
                                <BeginStoryboard Storyboard="{StaticResource left}" x:Name="leftt" ></BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="button" Property="Background" Value="#000000"></Setter>
                            <Setter TargetName="icon" Property="Text" Value="🌙"/>
                            <Setter TargetName="icon" Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>